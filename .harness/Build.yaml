pipeline:
  name: Build
  identifier: Build
  projectIdentifier: demo
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1704192628541
        repoName: anujrajkumar/Tx-Automate
        build: <+input>
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: Build
                  identifier: Build
                  spec:
                    shell: Sh
                    command: |-
                      java --version
                      # msbuild --version
                      # export PATH="$PATH:/root/.dotnet/tools"
                      # export SONAR_SCANNER_OPTS="-Xmx4096m"
                      sudo apt update
                      sudo apt install openjdk-17-jdk
                      sudo update-alternatives --config java
                      export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
                      export PATH="$PATH:$JAVA_HOME/bin"
                      java --version
                      dotnet tool install --global dotnet-sonarscanner
                      dotnet sonarscanner begin /k:"harness-demo" /d:sonar.host.url="http://13.53.182.253:9000"  /d:sonar.token=<+secrets.getValue("account.sonar_token")>
                      dotnet build MyAppT/MyAppT.csproj
                      dotnet sonarscanner end /d:sonar.token=<+secrets.getValue("account.sonar_token")>
                      dotnet publish --configuration Release --output ./published
                      zip -r published_artifacts.zip ./published
                      ls -ltr
                      temp=$(find . -name '*.zip')
                      zip="published_artifacts.100.zip"
                      mv "$temp" "$zip"
                      # export ZipFileName=$(find . -name '*.zip')
                      export ZipFileName=$zip
                      echo "$ZipFileName"
                    outputVariables:
                      - name: ZipFileName
              - step:
                  type: Sonarqube
                  name: Sonarqube
                  identifier: Sonarqube
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      detection: auto
                    advanced:
                      log:
                        level: info
                      fail_on_severity: low
                    auth:
                      access_token: <+secrets.getValue("account.sonar_token")>
                      domain: http://13.53.182.253:9000/
                      ssl: true
                    tool:
                      project_key: harness-demo
              - step:
                  type: ArtifactoryUpload
                  name: ArtifactoryUpload
                  identifier: ArtifactoryUpload
                  spec:
                    connectorRef: account.IIS
                    target: generic-local/
                    sourcePath: <+stage.variables.zipName>
        variables:
          - name: zipName
            type: String
            description: ""
            required: false
            value: <+pipeline.stages.Build.spec.execution.steps.Build.output.outputVariables.ZipFileName>
